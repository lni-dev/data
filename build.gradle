plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'
    id 'signing'
}

group = 'io.github.lni-dev'
archivesBaseName = "data"
version =  '1.0'

targetCompatibility = JavaVersion.VERSION_11
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:22.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}


task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set("javadoc")
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives sourceJar, javadocJar
}



publishing {

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ''
                password = ''
            }

        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'data'
            from components.java
            pom {
                name = 'data'
                description = 'A Java Library to store data and parse it to JSON'
                url = 'https://lni-dev.github.io/'
                groupId = 'io.github.lni-dev'
                version = project.version

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'linusdev'
                        name = 'LinusDev'
                        email = 'einsuperlinus@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/lni-dev/data.git'
                    developerConnection ='scm:git:ssh://github.com:lni-dev/data.git'
                    url = 'http://github.com/lni-dev/data/tree/master'
                }
            }
        }
    }
}

signing {
    sign configurations.archives
    sign publishing.publications.mavenJava
}

